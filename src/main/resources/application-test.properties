# 配置Sharding-JDBC的分片策略
# 配置数据源，给数据源起名g1,g2...此处可配置多数据源
spring.shardingsphere.datasource.names=ttshb
# 配置数据源具体内容
# 由于上面配置数据源只有g1因此下面只配置g1.type,g1.driver-class-name,g1.url,g1.username,g1.password
spring.shardingsphere.datasource.ttshb.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ttshb.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ttshb.jdbc-url=jdbc:mysql://47.110.12.77:6606/ttshb?useSSL=false&useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false
spring.shardingsphere.datasource.ttshb.username=develop5
spring.shardingsphere.datasource.ttshb.password=develop5_mysql@2019
# 配置表的分布，表的策略
spring.shardingsphere.sharding.tables.sharding_table.actual-data-nodes=ttshb.sharding_table_$->{1..3}
# 指定sharding_table表 主键id 生成策略为 SNOWFLAKE
spring.shardingsphere.sharding.tables.sharding_table.key-generator.column=id
spring.shardingsphere.sharding.tables.sharding_table.key-generator.type=SNOWFLAKE
# 指定分片策略 约定id值是偶数添加到sharding_table_1表，如果id是奇数添加到sharding_table_2表
spring.shardingsphere.sharding.tables.sharding_table.table-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.sharding_table.table-strategy.inline.algorithm-expression=sharding_table_$->{id % 3 + 1}
# 打开sql输出日志
spring.shardingsphere.props.sql.show=true